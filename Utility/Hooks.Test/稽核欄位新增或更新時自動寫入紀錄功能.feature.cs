// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18052
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ApiSample.Utility.Hooks.Test
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("稽核欄位新增或更新時自動寫入紀錄功能", Description="提供給 DA層\r\n當資料欄位被標記為需要稽核時，當資料新增至Table或更新時，\r\n自動寫入稽核紀錄", SourceFile="稽核欄位新增或更新時自動寫入紀錄功能.feature", SourceLine=1)]
    public partial class 稽核欄位新增或更新時自動寫入紀錄功能Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "稽核欄位新增或更新時自動寫入紀錄功能.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("zh-TW"), "稽核欄位新增或更新時自動寫入紀錄功能", "提供給 DA層\r\n當資料欄位被標記為需要稽核時，當資料新增至Table或更新時，\r\n自動寫入稽核紀錄", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line 8
 testRunner.Given("目前登入的使用者為Kirk", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "假設");
#line 9
 testRunner.And("ShopContext自動寫入稽核紀錄", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "並且");
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("當新增資料時，自動寫入一筆稽核紀錄，記錄新增值", SourceLine=10)]
        public virtual void 當新增資料時自動寫入一筆稽核紀錄記錄新增值()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("當新增資料時，自動寫入一筆稽核紀錄，記錄新增值", ((string[])(null)));
#line 11
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table1.AddRow(new string[] {
                        "Fruits"});
#line 12
 testRunner.Given("新增分類資料", ((string)(null)), table1, "假設");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "IsValid"});
            table2.AddRow(new string[] {
                        "Fruits",
                        "true"});
#line 15
 testRunner.Then("資料庫中包含資料", ((string)(null)), table2, "那麼");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "IdentifyName",
                        "OriginValue",
                        "NewValue"});
            table3.AddRow(new string[] {
                        "Category",
                        "",
                        "Fruits"});
#line 18
 testRunner.And("稽核紀錄包含資料", ((string)(null)), table3, "並且");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("當更新資料時，自動寫入一筆稽核紀錄，記錄舊值與新值", SourceLine=21)]
        public virtual void 當更新資料時自動寫入一筆稽核紀錄記錄舊值與新值()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("當更新資料時，自動寫入一筆稽核紀錄，記錄舊值與新值", ((string[])(null)));
#line 22
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table4.AddRow(new string[] {
                        "Fruits"});
#line 23
 testRunner.Given("新增分類資料", ((string)(null)), table4, "假設");
#line 26
 testRunner.When("更新分類名字為Fruit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "當");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "IsValid"});
            table5.AddRow(new string[] {
                        "Fruit",
                        "true"});
#line 27
 testRunner.Then("資料庫中包含資料", ((string)(null)), table5, "那麼");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "IdentifyName",
                        "OriginValue",
                        "NewValue"});
            table6.AddRow(new string[] {
                        "Category",
                        "",
                        "Fruits"});
            table6.AddRow(new string[] {
                        "Category",
                        "Fruits",
                        "Fruit"});
#line 30
 testRunner.And("稽核紀錄包含資料", ((string)(null)), table6, "並且");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
