// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18052
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ApiSample.Utility.Hooks.Test
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("儲存資料自動更新系統資訊功能", Description="提供給 DA層\r\n當系統進行Insert、Update時，自動更新系統欄位", SourceFile="儲存資料自動更新系統資訊功能.feature", SourceLine=1)]
    public partial class 儲存資料自動更新系統資訊功能Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "儲存資料自動更新系統資訊功能.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("zh-TW"), "儲存資料自動更新系統資訊功能", "提供給 DA層\r\n當系統進行Insert、Update時，自動更新系統欄位", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
 testRunner.Given("目前登入的使用者為Kirk", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "假設");
#line 8
 testRunner.And("ShopContext當更新時會自動更新系統資訊", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "並且");
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("執行新增分類後，分類儲存會自動帶入使用者名稱", SourceLine=9)]
        public virtual void 執行新增分類後分類儲存會自動帶入使用者名稱()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("執行新增分類後，分類儲存會自動帶入使用者名稱", ((string[])(null)));
#line 10
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table1.AddRow(new string[] {
                        "Fruits"});
#line 11
 testRunner.Given("新增分類資料", ((string)(null)), table1, "假設");
#line 14
 testRunner.When("新增完畢", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "當");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "CreatedBy",
                        "UpdatedBy"});
            table2.AddRow(new string[] {
                        "Fruits",
                        "Kirk",
                        "Kirk"});
#line 15
 testRunner.Then("資料庫中包含資料", ((string)(null)), table2, "那麼");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("執行更新分類後，分類更新資訊會自動帶入使用者名稱", SourceLine=18)]
        public virtual void 執行更新分類後分類更新資訊會自動帶入使用者名稱()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("執行更新分類後，分類更新資訊會自動帶入使用者名稱", ((string[])(null)));
#line 19
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table3.AddRow(new string[] {
                        "Fruits"});
#line 20
 testRunner.Given("新增分類資料", ((string)(null)), table3, "假設");
#line 23
    testRunner.Given("更換使用者為David", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "假設");
#line 24
 testRunner.When("更新分類名字為Fruit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "當");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "CreatedBy",
                        "UpdatedBy"});
            table4.AddRow(new string[] {
                        "Fruit",
                        "Kirk",
                        "David"});
#line 25
 testRunner.Then("資料庫中包含資料", ((string)(null)), table4, "那麼");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
