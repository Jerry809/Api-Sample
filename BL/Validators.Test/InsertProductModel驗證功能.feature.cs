// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18052
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ApiSample.BL.Validators.Test
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("InsertProductModel驗證功能", Description="提供給 BL層\r\n使用者輸入InsertProductModel資料，驗證資料是否正確", SourceFile="InsertProductModel驗證功能.feature", SourceLine=1)]
    public partial class InsertProductModel驗證功能Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "InsertProductModel驗證功能.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("zh-TW"), "InsertProductModel驗證功能", "提供給 BL層\r\n使用者輸入InsertProductModel資料，驗證資料是否正確", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("輸入資料正確，驗證成功", SourceLine=5)]
        public virtual void 輸入資料正確驗證成功()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("輸入資料正確，驗證成功", ((string[])(null)));
#line 6
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Price",
                        "Cost",
                        "Introduction",
                        "StartListingAt",
                        "FinishListingAt",
                        "StartSellAt",
                        "FinishSellAt",
                        "CategoryId"});
            table1.AddRow(new string[] {
                        "Test",
                        "200",
                        "100",
                        "",
                        "2013-10-01",
                        "2014-10-01",
                        "2013-10-01",
                        "2014-10-01",
                        "1"});
#line 7
 testRunner.Given("使用者輸入InsertProductModel資料", ((string)(null)), table1, "假設");
#line 10
 testRunner.Given("資料庫存在分類序號1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "假設");
#line 11
 testRunner.When("執行InsertProductModel驗證", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "當");
#line 12
 testRunner.Then("驗證成功", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "那麼");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("輸入姓名為空，驗證失敗", SourceLine=13)]
        public virtual void 輸入姓名為空驗證失敗()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("輸入姓名為空，驗證失敗", ((string[])(null)));
#line 14
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Price",
                        "Cost",
                        "Introduction",
                        "StartListingAt",
                        "FinishListingAt",
                        "StartSellAt",
                        "FinishSellAt",
                        "CategoryId"});
            table2.AddRow(new string[] {
                        "",
                        "200",
                        "100",
                        "",
                        "2013-10-01",
                        "2014-10-01",
                        "2013-10-01",
                        "2014-10-01",
                        "1"});
#line 15
 testRunner.Given("使用者輸入InsertProductModel資料", ((string)(null)), table2, "假設");
#line 18
 testRunner.Given("資料庫存在分類序號1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "假設");
#line 19
 testRunner.When("執行InsertProductModel驗證", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "當");
#line 20
 testRunner.Then("驗證失敗", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "那麼");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("輸入姓名長度超過100，驗證失敗", SourceLine=21)]
        public virtual void 輸入姓名長度超過100驗證失敗()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("輸入姓名長度超過100，驗證失敗", ((string[])(null)));
#line 22
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Price",
                        "Cost",
                        "Introduction",
                        "StartListingAt",
                        "FinishListingAt",
                        "StartSellAt",
                        "FinishSellAt",
                        "CategoryId"});
            table3.AddRow(new string[] {
                        "",
                        "200",
                        "100",
                        "",
                        "2013-10-01",
                        "2014-10-01",
                        "2013-10-01",
                        "2014-10-01",
                        "1"});
#line 23
 testRunner.Given("使用者輸入InsertProductModel資料", ((string)(null)), table3, "假設");
#line 26
 testRunner.Given("資料庫存在分類序號1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "假設");
#line 27
 testRunner.And("姓名長度超過100", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "並且");
#line 28
 testRunner.When("執行InsertProductModel驗證", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "當");
#line 29
 testRunner.Then("驗證失敗", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "那麼");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("輸入價格為0，驗證失敗", SourceLine=30)]
        public virtual void 輸入價格為0驗證失敗()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("輸入價格為0，驗證失敗", ((string[])(null)));
#line 31
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Price",
                        "Cost",
                        "Introduction",
                        "StartListingAt",
                        "FinishListingAt",
                        "StartSellAt",
                        "FinishSellAt",
                        "CategoryId"});
            table4.AddRow(new string[] {
                        "Test",
                        "0",
                        "100",
                        "",
                        "2013-10-01",
                        "2014-10-01",
                        "2013-10-01",
                        "2014-10-01",
                        "1"});
#line 32
 testRunner.Given("使用者輸入InsertProductModel資料", ((string)(null)), table4, "假設");
#line 35
 testRunner.Given("資料庫存在分類序號1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "假設");
#line 36
 testRunner.When("執行InsertProductModel驗證", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "當");
#line 37
 testRunner.Then("驗證失敗", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "那麼");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("輸入價格小於成本，驗證失敗", SourceLine=38)]
        public virtual void 輸入價格小於成本驗證失敗()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("輸入價格小於成本，驗證失敗", ((string[])(null)));
#line 39
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Price",
                        "Cost",
                        "Introduction",
                        "StartListingAt",
                        "FinishListingAt",
                        "StartSellAt",
                        "FinishSellAt",
                        "CategoryId"});
            table5.AddRow(new string[] {
                        "Test",
                        "99",
                        "100",
                        "",
                        "2013-10-01",
                        "2014-10-01",
                        "2013-10-01",
                        "2014-10-01",
                        "1"});
#line 40
 testRunner.Given("使用者輸入InsertProductModel資料", ((string)(null)), table5, "假設");
#line 43
 testRunner.Given("資料庫存在分類序號1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "假設");
#line 44
 testRunner.When("執行InsertProductModel驗證", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "當");
#line 45
 testRunner.Then("驗證失敗", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "那麼");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("輸入成本為0，驗證失敗", SourceLine=46)]
        public virtual void 輸入成本為0驗證失敗()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("輸入成本為0，驗證失敗", ((string[])(null)));
#line 47
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Price",
                        "Cost",
                        "Introduction",
                        "StartListingAt",
                        "FinishListingAt",
                        "StartSellAt",
                        "FinishSellAt",
                        "CategoryId"});
            table6.AddRow(new string[] {
                        "Test",
                        "200",
                        "0",
                        "",
                        "2013-10-01",
                        "2014-10-01",
                        "2013-10-01",
                        "2014-10-01",
                        "1"});
#line 48
 testRunner.Given("使用者輸入InsertProductModel資料", ((string)(null)), table6, "假設");
#line 51
 testRunner.Given("資料庫存在分類序號1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "假設");
#line 52
 testRunner.When("執行InsertProductModel驗證", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "當");
#line 53
 testRunner.Then("驗證失敗", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "那麼");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("輸入成本大於售價，驗證失敗", SourceLine=54)]
        public virtual void 輸入成本大於售價驗證失敗()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("輸入成本大於售價，驗證失敗", ((string[])(null)));
#line 55
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Price",
                        "Cost",
                        "Introduction",
                        "StartListingAt",
                        "FinishListingAt",
                        "StartSellAt",
                        "FinishSellAt",
                        "CategoryId"});
            table7.AddRow(new string[] {
                        "Test",
                        "200",
                        "300",
                        "",
                        "2013-10-01",
                        "2014-10-01",
                        "2013-10-01",
                        "2014-10-01",
                        "1"});
#line 56
 testRunner.Given("使用者輸入InsertProductModel資料", ((string)(null)), table7, "假設");
#line 59
 testRunner.Given("資料庫存在分類序號1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "假設");
#line 60
 testRunner.When("執行InsertProductModel驗證", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "當");
#line 61
 testRunner.Then("驗證失敗", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "那麼");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("輸入介紹超過1000，驗證失敗", SourceLine=62)]
        public virtual void 輸入介紹超過1000驗證失敗()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("輸入介紹超過1000，驗證失敗", ((string[])(null)));
#line 63
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Price",
                        "Cost",
                        "Introduction",
                        "StartListingAt",
                        "FinishListingAt",
                        "StartSellAt",
                        "FinishSellAt",
                        "CategoryId"});
            table8.AddRow(new string[] {
                        "Test",
                        "200",
                        "100",
                        "",
                        "2013-10-01",
                        "2014-10-01",
                        "2013-10-01",
                        "2014-10-01",
                        "1"});
#line 64
 testRunner.Given("使用者輸入InsertProductModel資料", ((string)(null)), table8, "假設");
#line 67
 testRunner.Given("資料庫存在分類序號1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "假設");
#line 68
 testRunner.And("介紹長度超過1000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "並且");
#line 69
 testRunner.When("執行InsertProductModel驗證", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "當");
#line 70
 testRunner.Then("驗證失敗", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "那麼");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("輸入開賣時間為空，驗證失敗", SourceLine=71)]
        public virtual void 輸入開賣時間為空驗證失敗()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("輸入開賣時間為空，驗證失敗", ((string[])(null)));
#line 72
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Price",
                        "Cost",
                        "Introduction",
                        "StartListingAt",
                        "FinishListingAt",
                        "StartSellAt",
                        "FinishSellAt",
                        "CategoryId"});
            table9.AddRow(new string[] {
                        "Test",
                        "200",
                        "100",
                        "",
                        "2013-10-01",
                        "2014-10-01",
                        "",
                        "2014-10-01",
                        "1"});
#line 73
 testRunner.Given("使用者輸入InsertProductModel資料", ((string)(null)), table9, "假設");
#line 76
 testRunner.Given("資料庫存在分類序號1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "假設");
#line 77
 testRunner.When("執行InsertProductModel驗證", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "當");
#line 78
 testRunner.Then("驗證失敗", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "那麼");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("輸入開賣時間晚於開賣結束時間，驗證失敗", SourceLine=79)]
        public virtual void 輸入開賣時間晚於開賣結束時間驗證失敗()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("輸入開賣時間晚於開賣結束時間，驗證失敗", ((string[])(null)));
#line 80
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Price",
                        "Cost",
                        "Introduction",
                        "StartListingAt",
                        "FinishListingAt",
                        "StartSellAt",
                        "FinishSellAt",
                        "CategoryId"});
            table10.AddRow(new string[] {
                        "Test",
                        "200",
                        "100",
                        "",
                        "2013-10-01",
                        "2014-10-01",
                        "2015-10-01",
                        "2014-10-01",
                        "1"});
#line 81
 testRunner.Given("使用者輸入InsertProductModel資料", ((string)(null)), table10, "假設");
#line 84
 testRunner.Given("資料庫存在分類序號1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "假設");
#line 85
 testRunner.When("執行InsertProductModel驗證", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "當");
#line 86
 testRunner.Then("驗證失敗", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "那麼");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("輸入開賣結束時間為空，驗證失敗", SourceLine=87)]
        public virtual void 輸入開賣結束時間為空驗證失敗()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("輸入開賣結束時間為空，驗證失敗", ((string[])(null)));
#line 88
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Price",
                        "Cost",
                        "Introduction",
                        "StartListingAt",
                        "FinishListingAt",
                        "StartSellAt",
                        "FinishSellAt",
                        "CategoryId"});
            table11.AddRow(new string[] {
                        "Test",
                        "200",
                        "100",
                        "",
                        "2013-10-01",
                        "2014-10-01",
                        "2013-10-01",
                        "",
                        "1"});
#line 89
 testRunner.Given("使用者輸入InsertProductModel資料", ((string)(null)), table11, "假設");
#line 92
 testRunner.Given("資料庫存在分類序號1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "假設");
#line 93
 testRunner.When("執行InsertProductModel驗證", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "當");
#line 94
 testRunner.Then("驗證失敗", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "那麼");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("輸入開賣結束時間早於開賣時間，驗證失敗", SourceLine=95)]
        public virtual void 輸入開賣結束時間早於開賣時間驗證失敗()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("輸入開賣結束時間早於開賣時間，驗證失敗", ((string[])(null)));
#line 96
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Price",
                        "Cost",
                        "Introduction",
                        "StartListingAt",
                        "FinishListingAt",
                        "StartSellAt",
                        "FinishSellAt",
                        "CategoryId"});
            table12.AddRow(new string[] {
                        "Test",
                        "200",
                        "100",
                        "",
                        "2013-10-01",
                        "2014-10-01",
                        "2013-10-01",
                        "2012-10-01",
                        "1"});
#line 97
 testRunner.Given("使用者輸入InsertProductModel資料", ((string)(null)), table12, "假設");
#line 100
 testRunner.Given("資料庫存在分類序號1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "假設");
#line 101
 testRunner.When("執行InsertProductModel驗證", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "當");
#line 102
 testRunner.Then("驗證失敗", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "那麼");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("輸入上架時間為空，驗證失敗", SourceLine=103)]
        public virtual void 輸入上架時間為空驗證失敗()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("輸入上架時間為空，驗證失敗", ((string[])(null)));
#line 104
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Price",
                        "Cost",
                        "Introduction",
                        "StartListingAt",
                        "FinishListingAt",
                        "StartSellAt",
                        "FinishSellAt",
                        "CategoryId"});
            table13.AddRow(new string[] {
                        "Test",
                        "200",
                        "100",
                        "",
                        "",
                        "2014-10-01",
                        "2013-10-01",
                        "2014-10-01",
                        "1"});
#line 105
 testRunner.Given("使用者輸入InsertProductModel資料", ((string)(null)), table13, "假設");
#line 108
 testRunner.Given("資料庫存在分類序號1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "假設");
#line 109
 testRunner.When("執行InsertProductModel驗證", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "當");
#line 110
 testRunner.Then("驗證失敗", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "那麼");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("輸入上架時間晚於開賣時間，驗證失敗", SourceLine=111)]
        public virtual void 輸入上架時間晚於開賣時間驗證失敗()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("輸入上架時間晚於開賣時間，驗證失敗", ((string[])(null)));
#line 112
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Price",
                        "Cost",
                        "Introduction",
                        "StartListingAt",
                        "FinishListingAt",
                        "StartSellAt",
                        "FinishSellAt",
                        "CategoryId"});
            table14.AddRow(new string[] {
                        "Test",
                        "200",
                        "100",
                        "",
                        "2015-10-01",
                        "2014-10-01",
                        "2013-10-01",
                        "2014-10-01",
                        "1"});
#line 113
 testRunner.Given("使用者輸入InsertProductModel資料", ((string)(null)), table14, "假設");
#line 116
 testRunner.Given("資料庫存在分類序號1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "假設");
#line 117
 testRunner.When("執行InsertProductModel驗證", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "當");
#line 118
 testRunner.Then("驗證失敗", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "那麼");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("輸入下架時間為空，驗證失敗", SourceLine=119)]
        public virtual void 輸入下架時間為空驗證失敗()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("輸入下架時間為空，驗證失敗", ((string[])(null)));
#line 120
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Price",
                        "Cost",
                        "Introduction",
                        "StartListingAt",
                        "FinishListingAt",
                        "StartSellAt",
                        "FinishSellAt",
                        "CategoryId"});
            table15.AddRow(new string[] {
                        "Test",
                        "200",
                        "100",
                        "",
                        "2013-10-01",
                        "",
                        "2013-10-01",
                        "2014-10-01",
                        "1"});
#line 121
 testRunner.Given("使用者輸入InsertProductModel資料", ((string)(null)), table15, "假設");
#line 124
 testRunner.Given("資料庫存在分類序號1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "假設");
#line 125
 testRunner.When("執行InsertProductModel驗證", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "當");
#line 126
 testRunner.Then("驗證失敗", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "那麼");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("輸入下架時間早於開賣結束時間，驗證失敗", SourceLine=127)]
        public virtual void 輸入下架時間早於開賣結束時間驗證失敗()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("輸入下架時間早於開賣結束時間，驗證失敗", ((string[])(null)));
#line 128
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Price",
                        "Cost",
                        "Introduction",
                        "StartListingAt",
                        "FinishListingAt",
                        "StartSellAt",
                        "FinishSellAt",
                        "CategoryId"});
            table16.AddRow(new string[] {
                        "Test",
                        "200",
                        "100",
                        "",
                        "2013-10-01",
                        "2012-10-01",
                        "2013-10-01",
                        "2014-10-01",
                        "1"});
#line 129
 testRunner.Given("使用者輸入InsertProductModel資料", ((string)(null)), table16, "假設");
#line 132
 testRunner.Given("資料庫存在分類序號1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "假設");
#line 133
 testRunner.When("執行InsertProductModel驗證", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "當");
#line 134
 testRunner.Then("驗證失敗", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "那麼");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("輸入分類資料為空，驗證失敗", SourceLine=135)]
        public virtual void 輸入分類資料為空驗證失敗()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("輸入分類資料為空，驗證失敗", ((string[])(null)));
#line 136
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Price",
                        "Cost",
                        "Introduction",
                        "StartListingAt",
                        "FinishListingAt",
                        "StartSellAt",
                        "FinishSellAt",
                        "CategoryId"});
            table17.AddRow(new string[] {
                        "Test",
                        "200",
                        "100",
                        "",
                        "2013-10-01",
                        "2014-10-01",
                        "2013-10-01",
                        "2014-10-01",
                        "0"});
#line 137
 testRunner.Given("使用者輸入InsertProductModel資料", ((string)(null)), table17, "假設");
#line 140
 testRunner.Given("資料庫存在分類序號1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "假設");
#line 141
 testRunner.When("執行InsertProductModel驗證", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "當");
#line 142
 testRunner.Then("驗證失敗", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "那麼");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("輸入分類不存在資料庫中，驗證失敗", SourceLine=143)]
        public virtual void 輸入分類不存在資料庫中驗證失敗()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("輸入分類不存在資料庫中，驗證失敗", ((string[])(null)));
#line 144
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Price",
                        "Cost",
                        "Introduction",
                        "StartListingAt",
                        "FinishListingAt",
                        "StartSellAt",
                        "FinishSellAt",
                        "CategoryId"});
            table18.AddRow(new string[] {
                        "Test",
                        "200",
                        "100",
                        "",
                        "2013-10-01",
                        "2014-10-01",
                        "2013-10-01",
                        "2014-10-01",
                        "1"});
#line 145
 testRunner.Given("使用者輸入InsertProductModel資料", ((string)(null)), table18, "假設");
#line 148
 testRunner.Given("資料庫不存在分類序號1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "假設");
#line 149
 testRunner.When("執行InsertProductModel驗證", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "當");
#line 150
 testRunner.Then("驗證失敗", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "那麼");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
